{"version":3,"sources":["components/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","setpageData","className","alt","src","process","onClick","mockData","pages","id","App","useState","pageData","dataBlocks","blocks","style","backgroundImage","background","title","subhead","cta","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNA+BeA,MA3Bf,YAAgC,IAAfC,EAAc,EAAdA,YAGf,OACI,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,aAAaC,IAAI,OAAOC,IAAG,UAAKC,uBAAL,2BAE5C,sBAAKH,UAAU,OAAf,UACE,wBAAQI,QAAS,WAAOL,EAAYM,EAASC,MAAM,KAAnD,wBACA,wBAAQF,QAAS,WAAOL,EAAYM,EAASC,MAAM,KAAnD,sBACA,wBAAQF,QAAS,WAAOL,EAAYM,EAASC,MAAM,KAAnD,4BAIJ,qBAAKN,UAAU,UAAf,SACE,wBAAQO,GAAG,iBAAX,gCCyBGC,MA1Cf,WAAgB,IAAD,EACmBC,mBAASJ,EAASC,MAAM,IAD3C,mBACNI,EADM,KACIX,EADJ,KAEPY,EAAaD,EAASE,OAAO,GAEnC,OACE,qBACEZ,UAAU,iBACVa,MAAO,CACLC,gBAAgB,OAAD,OACbX,+BAAsCQ,EAAWI,WADpC,MAHnB,SAQE,sBAAKf,UAAU,OAAf,UACE,cAAC,EAAD,CAAQD,YAAaA,IACrB,sBAAKC,UAAU,UAAf,UACE,qBAAKA,UAAU,oBAAf,SACA,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,SACE,6BAAKU,EAASM,UAGhB,qBAAKhB,UAAU,UAAf,SAA0BW,EAAWM,eAKvC,sBAAKjB,UAAU,gBAAf,UACE,qBAAKA,UAAU,WAAf,SAA2BW,EAAWO,MACtC,qBAAKlB,UAAU,uBAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAU,kBAAf,wBACA,qBAAKA,UAAU,mBAAf,qCCzBDmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6b8af97a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\nimport mockData from \"../content.json\";\r\n\r\nfunction Navbar({setpageData}) {\r\n\r\n \r\n  return (\r\n      <div className=\"nav\">\r\n        <div className=\"nav-container\">\r\n          <div className=\"header\"> \r\n            <div className=\"logo\">\r\n              <img className=\"logo-image\" alt=\"logo\" src={`${process.env.PUBLIC_URL}/images/abclogo.png`} />\r\n            </div>\r\n            <div className=\"menu\">\r\n              <button onClick={() => {setpageData(mockData.pages[0])}}>Industries</button>\r\n              <button onClick={() => {setpageData(mockData.pages[1])}}>Services</button>\r\n              <button onClick={() => {setpageData(mockData.pages[2])}}>About Us</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"contact\">\r\n            <button id=\"contact-button\">Contact Us</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport mockData from \"./content.json\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nfunction App() {\r\n  const [pageData, setpageData] = useState(mockData.pages[0]);\r\n  const dataBlocks = pageData.blocks[0];\r\n\r\n  return (\r\n    <div\r\n      className=\"page-container\"\r\n      style={{\r\n        backgroundImage: `url(${\r\n          process.env.PUBLIC_URL + \"/images/\" + dataBlocks.background\r\n        })`,\r\n      }}\r\n    >\r\n      <div className=\"main\">\r\n        <Navbar setpageData={setpageData} />\r\n        <div className=\"marquee\">\r\n          <div className=\"content-container\">\r\n          <div className=\"content\">\r\n            <div className=\"headline\">\r\n              <h1>{pageData.title}</h1>\r\n            </div>\r\n\r\n            <div className=\"subhead\">{dataBlocks.subhead}</div>\r\n          </div>\r\n          </div>\r\n          \r\n\r\n          <div className=\"cta-container\">\r\n            <div className=\"cta-text\">{dataBlocks.cta}</div>\r\n            <div className=\"cta-button-container\">\r\n              <button className=\"cta-button\">\r\n                <div className=\"cta-button-text\">LETS TALK.</div>\r\n                <div className=\"cta-button-arrow\">&#x2192;</div>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}